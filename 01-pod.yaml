apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - name: nginx
    image: nginx
    env:
    - name: VAR
      value: value
    command: ["nginx", "-g", "daemon off;"]
    ports:
    - containerPort: 80
# Genewralidades
# kubectl version --client
# kubectl [command] [TYPE] [NAME] [flags]
# kubectl config view
# kubectl config get-contexts
# kubectl config current-context
# kubectl config use-context [cluster-name]

# Creando objetos POD
# https://kubernetes.io/es/docs/concepts/overview/working-with-objects/kubernetes-objects/
# kubectl apply -f [manifest.yaml]
# kubectl apply -f [manifest1.yaml] [manifest2.yaml]
# kubectl apply -f ./dir
# kubectl apply -f [URL]
# kubectl create deployment [deployment-name] --image=[image-name]
# Ejemplo
# kubectl create deployment nginx --image=nginx

# Ver o encontrar recursos
# kubectl get services
# kubectl get pods --all-namespaces
# kubectl get pods -o wide
# kubectl get pod [pod-name] -o yaml
# kubectl describe pods [node-name]

# Eliminar recursos
# kubectl delete -f ./pod.json
# kubectl delete pod,service [pod-name] [service-name]